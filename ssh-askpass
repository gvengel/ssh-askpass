#!/usr/bin/env bash

# Handle callback from tmux
if [ "$1" == '--prompt' ]; then
  exec 3>"$2"
  shift 2
  whiptail "$@" 2>&3
  echo >&3
  echo "$?" >&3
  exit 0
fi

TIMEOUT=5
DEFAULT=10
TERM="iTerm"
TITLE="SSH Agent Request"
PROMPT="$1\n\nConfirm for agent for time interval."
KEYFILE=$(echo "$1" | awk '/^Allow use of key/ {print $5}' | cut -d? -f1)
INPUTOPTS="10 0 $DEFAULT"
REMOTE=""

export PATH="/usr/local/bin:$PATH"

notify() {
  if [ -x "$(which osascript)" ] && [ -z "$REMOTE" ]; then
    osascript -e "display notification \"$*\" with title \"$TITLE\""
  fi
}

# Approve requests in grace period.
if [ -f ~/.ssh/ssh-agent.timeout ]; then
  if [ "$(<~/.ssh/ssh-agent.timeout)" -gt "$(date +%s)" ]; then
    notify "Approved use of ${KEYFILE:-agent}."
    exit 0
  fi
fi

if [ "$(uname -s)" == "Darwin" ]; then
  OPENED=$(lsof -c ssh)
  PIDS="$(for d in $(lsof -p "$PPID" | awk '$5 == "unix" {print $6}'); do echo "$OPENED" | awk "/>$d/ {print \$2}"; done)"
  if [ "$PIDS" ]; then
    # Check for PIDs with multiple pipes, which are requests through a forwarded agent
    CALLER=$(echo "$PIDS" | sort | uniq -d | tail -1)
    if [ -z "$CALLER" ]; then
      # Otherwise, just get the most recent SSH process
      CALLER=$(ps -o etime,pid -p "$PIDS" | tail -n+2 | sed 's/://g' | sort -n | head -1 | awk '{print $2}')
    fi
    # Search a parent tmux process
    ppid() { (ps -o ppid,comm -p "$1" || echo "") | tail -1; }
    PARENT=$(ppid "$CALLER")
    while [ "$PARENT" ]; do
      PARENT=$(ppid "$PARENT")
      if [[ "$PARENT" == *'sshd'* ]]; then
        REMOTE="$PARENT"
      fi
      if [[ "$PARENT" == *'tmux'* ]]; then
        break
      fi
    done
  fi
else
  # Assume we are under tmux on other platforms
  PARENT="tmux"
fi

GRACE=0
EXIT=1

# We were called from inside a tmux session, so prompt via a new tmux window.
if [ "$PARENT" ]; then
  TMP="$(mktemp -dt ask.XXXXXXXX)"
  FIFO="$TMP/fifo"
  function cleanup() { rm -fr "$TMP"; }
  trap cleanup EXIT
  mkfifo -m 0600 "$FIFO" || exit 1
  which whiptail >/dev/null || exit 1
  if tmux new-window -n askpass "'$0' --prompt '$FIFO' --inputbox '$PROMPT' $INPUTOPTS" >/dev/null 2>&1; then
    builtin read -t $TIMEOUT -rd '' GRACE REPLY <"$FIFO" || tmux kill-window -t askpass 2>/dev/null
    if [ "$REPLY" == "0" ]; then
      EXIT=0
    fi
    GRACE="${GRACE//[^0-9]/}"
    GRACE="${GRACE:-$DEFAULT}"
  fi
# Otherwise, we pop a GUI prompt
else
  # If we connected via SSH, the dialog is going to timeout, so fail early
  if [ -z "$REMOTE" ]; then
    GRACE=$(
      osascript - <<EOT
tell application "$TERM"
    activate
    set prompt to display dialog "$PROMPT" buttons {"Ok", "Cancel"} default button 1 default answer $DEFAULT with title "$TITLE" with icon caution giving up after $TIMEOUT
end tell
set answer to button returned of prompt
if answer is not equal to "Ok" then
    return -1
end if
try
    set grace to text returned of prompt as integer
on error
    set grace to $DEFAULT
end try
return grace
EOT
    )
    if [ "$GRACE" -ne "-1" ]; then
      EXIT=0
    fi
  fi
fi
if [ "$EXIT" -ne "0" ]; then
  notify "Denied use of ${KEYFILE:-agent}."
elif [ "$GRACE" -gt 0 ]; then
  echo $(($(date +%s) + GRACE)) >~/.ssh/ssh-agent.timeout
fi
exit $EXIT
